global
  log stdout format raw local0
  daemon

  # Default ciphers to use on SSL-enabled listening sockets.
  # For more information, see ciphers(1SSL).
  ssl-default-bind-ciphers kEECDH+aRSA+AES:kRSA+AES:+AES256:RC4-SHA:!kEDH:!LOW:!EXP:!MD5:!aNULL:!eNULL

resolvers docker_resolver
  nameserver dns {{ haproxy.dns_resolver }}

defaults
  log     global
  mode    http
  option  httplog
  option  dontlognull
  timeout connect 36000s
  timeout client 36000s
  timeout server 36000s

frontend http
  bind *:80
  mode http
	
	# if this is an ACME request to proof the domain ownder, then redirect to nginx-certbot server
  acl is_well_known path_beg -i /.well-known/
	
	# else redirect the traffic to https
  redirect scheme https code 301 if !is_well_known !{ ssl_fc }
  use_backend letsencrypt if is_well_known

backend letsencrypt
  server letsencrypt {{ haproxy.lb_vip }}:8080 check init-addr none

frontend https
  bind *:443 ssl crt-list /usr/local/etc/haproxy/crt-list.cfg
  option forwardfor

{% for acl in haproxy.acls %}
  acl {{ acl.name }} {{ acl.type }} {{ acl.value }}
{% endfor %}

{% for server in haproxy.servers %}
  acl host_{{ server.name }} hdr(host) -i {{ server.uri }}
  use_backend {{ server.name }} if host_{{ server.name }}{% if server.extra_use_condition is defined %} {{ server.extra_use_condition }}{% endif %}
{% endfor %}

  http-request add-header X-Forwarded-Proto https if { ssl_fc }
  http-request add-header X-Forwarded-Port 443 if { ssl_fc }
  http-response set-header Strict-Transport-Security "max-age=16000000; includeSubDomains; preload;"

{% for server in haproxy.servers %}
backend {{ server.name }}
  server {{ server.name }} {{ server.backend_target }}{% if server.extra_backend_server_args is defined %} {{ server.extra_backend_server_args }}{% endif %}
{% for option in server.extra_backend_options %}
  option {{ option }}
{% endfor %}
{% for config in server.extra_backend_config %}
  {{ config }}
{% endfor %}
{% endfor %}
